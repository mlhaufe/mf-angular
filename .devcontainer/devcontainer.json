// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.205.2/containers/javascript-node
{
	"name": "Node.js",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick a Node version: 16, 14, 12.
		// Append -bullseye or -buster to pin to an OS version.
		// Use -bullseye variants on local arm64/Apple Silicon.
		"args": { "VARIANT": "16-bullseye" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"ms-azuretools.vscode-docker",
		"davidanson.vscode-markdownlint",
		"editorconfig.editorconfig"
	],

	"mounts": [
		// Enables the use of Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
		// We want to run docker containers from the OS and not from inside the devcontainer
		// the following forwards the Docker socket by mounting it in the container
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
		// share the .ssh folder from WSL to prevent having to recreate git credentials when container is rebuilt
		"source=${localEnv:HOME}/.ssh,target=/root/.ssh,type=bind,consistency=cached"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "yarn install",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "node",
	"features": {
		"git": "latest"
	},

	// Set environment variables within the devcontainer
	"remoteEnv": {
		//docker-compose.local.yaml needs to know the root of the workspace in order locate directories
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	}
}
